# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: shopify-serverless-auth

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  # iamRoleStatements:
  #   - Effect: "Allow"
  #     Action:
  #       - "s3:ListBucket"
  #     Resource: "*"

  environment:
    POST_AUTH_REDIRECT: ''
    SHOPIFY_API_KEY: ${env:SHOPIFY_API_KEY}
    SHOPIFY_API_SECRET: ${env:SHOPIFY_API_SECRET}

functions:
  authinit:
    handler: auth.init
    events:
      - http:
          path: auth/init
          method: get
  authtoken:
    handler: auth.token
    events:
      - http:
          path: auth/token
          method: get
  authpage:
    handler: auth.page
    events:
      - http:
          path: test
          method: get
    
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
# resources:
#   Resources:
#     LandingPage:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: ${self:provider.environment.DATA_BUCKET}